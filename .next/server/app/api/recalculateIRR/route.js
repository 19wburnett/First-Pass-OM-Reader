"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/recalculateIRR/route";
exports.ids = ["app/api/recalculateIRR/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2FrecalculateIRR%2Froute&page=%2Fapi%2FrecalculateIRR%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2FrecalculateIRR%2Froute.ts&appDir=C%3A%5CUsers%5Cwesto%5COneDrive%5CDocuments%5CFirst%20Pass%20OM%20Reader%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cwesto%5COneDrive%5CDocuments%5CFirst%20Pass%20OM%20Reader&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2FrecalculateIRR%2Froute&page=%2Fapi%2FrecalculateIRR%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2FrecalculateIRR%2Froute.ts&appDir=C%3A%5CUsers%5Cwesto%5COneDrive%5CDocuments%5CFirst%20Pass%20OM%20Reader%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cwesto%5COneDrive%5CDocuments%5CFirst%20Pass%20OM%20Reader&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_westo_OneDrive_Documents_First_Pass_OM_Reader_app_api_recalculateIRR_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/recalculateIRR/route.ts */ \"(rsc)/./app/api/recalculateIRR/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/recalculateIRR/route\",\n        pathname: \"/api/recalculateIRR\",\n        filename: \"route\",\n        bundlePath: \"app/api/recalculateIRR/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\westo\\\\OneDrive\\\\Documents\\\\First Pass OM Reader\\\\app\\\\api\\\\recalculateIRR\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_westo_OneDrive_Documents_First_Pass_OM_Reader_app_api_recalculateIRR_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/recalculateIRR/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZyZWNhbGN1bGF0ZUlSUiUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGcmVjYWxjdWxhdGVJUlIlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZyZWNhbGN1bGF0ZUlSUiUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUN3ZXN0byU1Q09uZURyaXZlJTVDRG9jdW1lbnRzJTVDRmlyc3QlMjBQYXNzJTIwT00lMjBSZWFkZXIlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q3dlc3RvJTVDT25lRHJpdmUlNUNEb2N1bWVudHMlNUNGaXJzdCUyMFBhc3MlMjBPTSUyMFJlYWRlciZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUMrQztBQUM1SDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzZKOztBQUU3SiIsInNvdXJjZXMiOlsid2VicGFjazovL2NyZS11bmRlcndyaXRpbmctYXBwLz9jZWJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXHdlc3RvXFxcXE9uZURyaXZlXFxcXERvY3VtZW50c1xcXFxGaXJzdCBQYXNzIE9NIFJlYWRlclxcXFxhcHBcXFxcYXBpXFxcXHJlY2FsY3VsYXRlSVJSXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9yZWNhbGN1bGF0ZUlSUi9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3JlY2FsY3VsYXRlSVJSXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9yZWNhbGN1bGF0ZUlSUi9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXHdlc3RvXFxcXE9uZURyaXZlXFxcXERvY3VtZW50c1xcXFxGaXJzdCBQYXNzIE9NIFJlYWRlclxcXFxhcHBcXFxcYXBpXFxcXHJlY2FsY3VsYXRlSVJSXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3JlY2FsY3VsYXRlSVJSL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2FrecalculateIRR%2Froute&page=%2Fapi%2FrecalculateIRR%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2FrecalculateIRR%2Froute.ts&appDir=C%3A%5CUsers%5Cwesto%5COneDrive%5CDocuments%5CFirst%20Pass%20OM%20Reader%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cwesto%5COneDrive%5CDocuments%5CFirst%20Pass%20OM%20Reader&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/recalculateIRR/route.ts":
/*!*****************************************!*\
  !*** ./app/api/recalculateIRR/route.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n\nasync function POST(request) {\n    try {\n        const { dealData, newAssumptions, newPrice } = await request.json();\n        // Recalculate IRR with new assumptions and/or new price\n        const recalculatedData = recalculateIRRWithNewAssumptions(dealData, newAssumptions, newPrice);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(recalculatedData);\n    } catch (error) {\n        console.error(\"Error recalculating IRR:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to recalculate IRR\"\n        }, {\n            status: 500\n        });\n    }\n}\nfunction recalculateIRRWithNewAssumptions(dealData, newAssumptions, newPrice) {\n    // Extract base data from original deal\n    const { propertyName, whisperPrice, units, occupancy, avgRent, expenses: parsedExpenses, NOI: parsedNOI, marketCapRate: originalMarketCapRate } = dealData;\n    // Use new assumptions\n    const assumptions = newAssumptions;\n    // Recalculate pro forma metrics with new assumptions\n    const grossPotentialIncome = units * avgRent * 12;\n    const vacancy = assumptions.vacancy;\n    const effectiveGrossIncome = grossPotentialIncome * (1 - vacancy);\n    // Use parsed expenses or calculate based on new assumption\n    const operatingExpenses = parsedExpenses || effectiveGrossIncome * assumptions.expenseRatio;\n    // Use parsed NOI or calculate\n    const NOI = parsedNOI || effectiveGrossIncome - operatingExpenses;\n    // Use new price if provided, otherwise calculate from cap rate\n    const purchasePrice = newPrice || NOI / assumptions.marketCapRate;\n    // Calculate price difference (whisper price - calculated price)\n    // If using whisper price, difference is 0. If using custom price, difference is custom - market\n    let priceDifference;\n    if (newPrice === whisperPrice) {\n        priceDifference = 0 // Using whisper price\n        ;\n    } else if (newPrice && newPrice !== NOI / assumptions.marketCapRate) {\n        const marketValue = NOI / assumptions.marketCapRate;\n        priceDifference = newPrice - marketValue // Custom price vs market\n        ;\n    } else {\n        priceDifference = whisperPrice && whisperPrice > 0 ? whisperPrice - purchasePrice : 0 // Original logic\n        ;\n    }\n    // Cap rate valuation (same as purchase price)\n    const capRateValuation = purchasePrice;\n    // Financing calculations with new assumptions\n    const loanAmount = purchasePrice * assumptions.loanToValue;\n    const equity = purchasePrice - loanAmount;\n    // Calculate monthly payment for loan with new terms\n    const monthlyRate = assumptions.interestRate / 12;\n    const totalPayments = assumptions.amortizationYears * 12;\n    const debtService = loanAmount * (monthlyRate * Math.pow(1 + monthlyRate, totalPayments)) / (Math.pow(1 + monthlyRate, totalPayments) - 1);\n    const annualDebtService = debtService * 12;\n    // Investment metrics\n    const DSCR = NOI / annualDebtService;\n    const cashOnCashReturn = (NOI - annualDebtService) / equity;\n    // 5-year IRR calculation with new assumptions\n    console.log(\"=== Pro Forma Inputs ===\");\n    console.log(\"Purchase Price:\", purchasePrice);\n    console.log(\"Equity:\", equity);\n    console.log(\"Loan Amount:\", loanAmount);\n    console.log(\"Initial NOI:\", NOI);\n    console.log(\"Annual Debt Service:\", annualDebtService);\n    console.log(\"Assumptions:\", assumptions);\n    const { leveredIRR, unleveredIRR, irrBreakdown } = calculateDetailedIRR(purchasePrice, equity, loanAmount, NOI, annualDebtService, assumptions, dealData.rentRollData // Pass rent roll data for accurate calculations\n    );\n    return {\n        ...dealData,\n        purchasePrice,\n        priceDifference,\n        grossPotentialIncome,\n        effectiveGrossIncome,\n        operatingExpenses,\n        capRateValuation,\n        debtService: annualDebtService,\n        DSCR,\n        cashOnCashReturn,\n        leveredIRR,\n        unleveredIRR,\n        equity,\n        loanAmount,\n        vacancy,\n        expenseRatio: assumptions.expenseRatio,\n        marketCapRate: assumptions.marketCapRate,\n        irrBreakdown\n    };\n}\nfunction calculateDetailedIRR(purchasePrice, equity, loanAmount, initialNOI, initialDebtService, assumptions, rentRollData) {\n    const breakdown = [];\n    // Year 0 - Initial investment\n    breakdown.push({\n        year: 0,\n        grossIncome: 0,\n        operatingExpenses: 0,\n        NOI: 0,\n        debtService: 0,\n        cashFlowBeforeDebt: -purchasePrice,\n        cashFlowAfterDebt: -equity,\n        cumulativeCashFlowBeforeDebt: -purchasePrice,\n        cumulativeCashFlowAfterDebt: -equity,\n        remainingDebt: loanAmount,\n        propertyValue: purchasePrice,\n        exitEquity: 0,\n        totalReturnUnlevered: 0,\n        totalReturnLevered: 0,\n        annualCashOnCash: 0\n    });\n    // Years 1 to analysisTerm - Projected cash flows\n    let cumulativeCashFlowBeforeDebt = 0;\n    let cumulativeCashFlowAfterDebt = -equity;\n    let remainingDebt = loanAmount;\n    for(let year = 1; year <= assumptions.analysisTerm; year++){\n        // Calculate growth factors\n        const rentGrowth = Math.pow(1 + assumptions.rentGrowthRate, year);\n        const expenseGrowth = Math.pow(1 + assumptions.expenseGrowthRate, year);\n        // Calculate year-specific values\n        let yearNOI;\n        let yearOperatingExpenses;\n        let yearGrossIncome;\n        if (rentRollData && rentRollData.totalUnits > 0) {\n            // Calculate from actual rent roll data\n            const baseAnnualRent = rentRollData.totalMonthlyRent * 12;\n            yearGrossIncome = baseAnnualRent * rentGrowth;\n            yearOperatingExpenses = yearGrossIncome * assumptions.expenseRatio;\n            yearNOI = yearGrossIncome - yearOperatingExpenses;\n        } else {\n            // Fallback to NOI-based calculation\n            yearNOI = initialNOI * rentGrowth;\n            yearOperatingExpenses = yearNOI * assumptions.expenseRatio * expenseGrowth;\n            yearGrossIncome = yearNOI + yearOperatingExpenses;\n        }\n        // Calculate debt service (fixed for now, could be variable rate)\n        const yearDebtService = initialDebtService;\n        // Calculate cash flows (operating only)\n        const yearCashFlowBeforeDebt = yearNOI;\n        const yearCashFlowAfterDebt = yearNOI - yearDebtService;\n        // Update cumulative flows (operating only)\n        cumulativeCashFlowBeforeDebt += yearCashFlowBeforeDebt;\n        cumulativeCashFlowAfterDebt += yearCashFlowAfterDebt;\n        // Calculate remaining debt (simplified - could use actual amortization schedule)\n        remainingDebt = Math.max(0, remainingDebt - (yearDebtService - loanAmount * assumptions.interestRate));\n        // Calculate property value at exit (final year)\n        const propertyValue = year === assumptions.analysisTerm ? yearNOI / assumptions.exitCapRate : purchasePrice * Math.pow(1 + assumptions.rentGrowthRate, year);\n        // Calculate exit equity\n        const exitEquity = year === assumptions.analysisTerm ? propertyValue - remainingDebt : 0;\n        // Calculate annual cash on cash return\n        const annualCashOnCash = year === 0 ? 0 : yearCashFlowAfterDebt / equity;\n        // For final year, add property sale to cash flows\n        const finalCashFlowBeforeDebt = year === assumptions.analysisTerm ? yearCashFlowBeforeDebt + propertyValue : yearCashFlowBeforeDebt;\n        const finalCashFlowAfterDebt = year === assumptions.analysisTerm ? yearCashFlowAfterDebt + (propertyValue - remainingDebt) : yearCashFlowAfterDebt;\n        // Debug final year calculations\n        if (year === assumptions.analysisTerm) {\n            console.log(`=== Year ${assumptions.analysisTerm} Debug ===`);\n            console.log(`Year ${assumptions.analysisTerm} NOI:`, yearNOI);\n            console.log(`Property Value (Year ${assumptions.analysisTerm} NOI / Exit Cap):`, propertyValue);\n            console.log(\"Operating Cash Flow Before Debt:\", yearCashFlowBeforeDebt);\n            console.log(\"Operating Cash Flow After Debt:\", yearCashFlowAfterDebt);\n            console.log(\"Final Unlevered Cash Flow:\", finalCashFlowBeforeDebt);\n            console.log(\"Final Levered Cash Flow:\", finalCashFlowAfterDebt);\n            console.log(\"Remaining Debt:\", remainingDebt);\n            console.log(\"Exit Equity:\", exitEquity);\n            console.log(`=== End Year ${assumptions.analysisTerm} Debug ===`);\n        }\n        breakdown.push({\n            year,\n            grossIncome: yearGrossIncome,\n            operatingExpenses: yearOperatingExpenses,\n            NOI: yearNOI,\n            debtService: yearDebtService,\n            cashFlowBeforeDebt: finalCashFlowBeforeDebt,\n            cashFlowAfterDebt: finalCashFlowAfterDebt,\n            cumulativeCashFlowBeforeDebt: cumulativeCashFlowBeforeDebt + (year === assumptions.analysisTerm ? propertyValue : 0),\n            cumulativeCashFlowAfterDebt: cumulativeCashFlowAfterDebt + (year === assumptions.analysisTerm ? propertyValue - remainingDebt : 0),\n            remainingDebt,\n            propertyValue,\n            exitEquity,\n            totalReturnUnlevered: cumulativeCashFlowBeforeDebt + (year === assumptions.analysisTerm ? propertyValue : 0),\n            totalReturnLevered: cumulativeCashFlowAfterDebt + (year === assumptions.analysisTerm ? propertyValue - remainingDebt : 0),\n            annualCashOnCash\n        });\n    }\n    // Calculate IRR using Newton-Raphson method\n    console.log(\"=== IRR Calculation Debug ===\");\n    console.log(\"Levered cash flows:\", breakdown.map((row)=>row.cashFlowAfterDebt));\n    console.log(\"Unlevered cash flows:\", breakdown.map((row)=>row.cashFlowBeforeDebt));\n    const leveredIRR = calculateIRR(breakdown.map((row)=>row.cashFlowAfterDebt));\n    const unleveredIRR = calculateIRR(breakdown.map((row)=>row.cashFlowBeforeDebt));\n    console.log(`Final Results - Levered: ${(leveredIRR * 100).toFixed(2)}%, Unlevered: ${(unleveredIRR * 100).toFixed(2)}%`);\n    console.log(\"=== End IRR Debug ===\");\n    return {\n        leveredIRR,\n        unleveredIRR,\n        irrBreakdown: breakdown\n    };\n}\nfunction calculateIRR(cashFlows) {\n    // Newton-Raphson method for IRR calculation\n    let guess = 0.15 // Initial guess of 15%\n    ;\n    const maxIterations = 100;\n    const tolerance = 1e-6;\n    // Debug: log cash flows\n    console.log(\"Cash flows for IRR calculation:\", cashFlows);\n    // Check if we have valid cash flows\n    if (cashFlows.length < 2) {\n        console.log(\"Invalid cash flows length:\", cashFlows.length);\n        return 0.15;\n    }\n    // Check if first cash flow is negative (investment)\n    if (cashFlows[0] >= 0) {\n        console.log(\"First cash flow should be negative (investment):\", cashFlows[0]);\n        return 0.15;\n    }\n    // Check if we have positive cash flows later\n    const hasPositiveFlows = cashFlows.slice(1).some((flow)=>flow > 0);\n    if (!hasPositiveFlows) {\n        console.log(\"No positive cash flows found after initial investment\");\n        return 0.15;\n    }\n    for(let i = 0; i < maxIterations; i++){\n        const npv = calculateNPV(cashFlows, guess);\n        const derivative = calculateNPVDerivative(cashFlows, guess);\n        if (Math.abs(npv) < tolerance) {\n            console.log(`IRR converged to ${(guess * 100).toFixed(2)}% after ${i + 1} iterations`);\n            break;\n        }\n        // Avoid division by zero\n        if (Math.abs(derivative) < 1e-10) {\n            console.log(\"Derivative too small, resetting guess\");\n            guess = 0.15;\n            continue;\n        }\n        const newGuess = guess - npv / derivative;\n        // Ensure guess stays reasonable\n        if (newGuess < -0.9 || newGuess > 10) {\n            console.log(`Guess ${(newGuess * 100).toFixed(2)}% out of bounds, resetting to 15%`);\n            guess = 0.15;\n        } else {\n            guess = newGuess;\n        }\n    }\n    // Validate IRR is reasonable\n    if (guess < -0.9 || guess > 10) {\n        console.log(`Final IRR ${(guess * 100).toFixed(2)}% out of bounds, using fallback`);\n        return 0.15;\n    }\n    console.log(`Final IRR: ${(guess * 100).toFixed(2)}%`);\n    return guess;\n}\nfunction calculateNPV(cashFlows, rate) {\n    let npv = 0;\n    for(let i = 0; i < cashFlows.length; i++){\n        npv += cashFlows[i] / Math.pow(1 + rate, i);\n    }\n    return npv;\n}\nfunction calculateNPVDerivative(cashFlows, rate) {\n    let derivative = 0;\n    for(let i = 1; i < cashFlows.length; i++){\n        derivative -= i * cashFlows[i] / Math.pow(1 + rate, i + 1);\n    }\n    return derivative;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/recalculateIRR/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2FrecalculateIRR%2Froute&page=%2Fapi%2FrecalculateIRR%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2FrecalculateIRR%2Froute.ts&appDir=C%3A%5CUsers%5Cwesto%5COneDrive%5CDocuments%5CFirst%20Pass%20OM%20Reader%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cwesto%5COneDrive%5CDocuments%5CFirst%20Pass%20OM%20Reader&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();